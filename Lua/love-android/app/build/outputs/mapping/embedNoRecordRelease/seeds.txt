androidx.appcompat.widget.ActionBarOverlayLayout
androidx.savedstate.Recreator
org.libsdl.app.SDLActivity$1
org.libsdl.app.SDLGenericMotionListener_API26
org.love2d.android.GameActivity
androidx.activity.ComponentActivity$3
androidx.appcompat.view.menu.ListMenuItemView
org.libsdl.app.SDL
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
org.libsdl.app.SDLActivity$6
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.appcompat.widget.AlertDialogLayout
org.libsdl.app.SDLActivity$1OneShotTask
org.libsdl.app.SDLHapticHandler$SDLHaptic
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.lifecycle.SavedStateHandleController
org.libsdl.app.HIDDeviceBLESteamController$4
org.libsdl.app.HIDDeviceManager$3
org.libsdl.app.HIDDeviceManager$1
androidx.appcompat.widget.ViewStubCompat
androidx.lifecycle.LegacySavedStateHandleController$1
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.lifecycle.SingleGeneratedAdapterObserver
org.libsdl.app.SDLJoystickHandler_API16$RangeComparator
androidx.activity.ComponentActivity$4
org.libsdl.app.DummyEdit
androidx.activity.ComponentActivity$5
org.libsdl.app.SDLHapticHandler
kotlinx.coroutines.android.AndroidExceptionPreHandler
org.libsdl.app.SDLActivity$3
androidx.fragment.app.Fragment$5
androidx.lifecycle.SavedStateHandleAttacher
org.libsdl.app.SDLJoystickHandler_API16
org.libsdl.app.HIDDevice
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.core.app.RemoteActionCompatParcelizer
androidx.core.app.RemoteActionCompat
androidx.activity.ImmLeaksCleaner
org.libsdl.app.HIDDeviceBLESteamController$1
org.libsdl.app.SDLMain
androidx.emoji2.text.EmojiCompatInitializer$1
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.libsdl.app.SDLActivity$NativeState
org.libsdl.app.SDLAudioManager
org.libsdl.app.HIDDeviceUSB$InputThread
androidx.appcompat.widget.ButtonBarLayout
androidx.appcompat.widget.ActionBarContainer
org.libsdl.app.SDLSurface
androidx.versionedparcelable.ParcelImpl
org.libsdl.app.SDLGenericMotionListener_API24
org.libsdl.app.HIDDeviceBLESteamController$2
org.libsdl.app.SDLActivity$4
org.libsdl.app.HIDDeviceBLESteamController$GattOperation
org.libsdl.app.HIDDeviceManager
androidx.appcompat.widget.ActionBarContextView
androidx.appcompat.widget.ContentFrameLayout
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.appcompat.widget.DialogTitle
androidx.appcompat.widget.Toolbar
androidx.startup.InitializationProvider
androidx.core.app.CoreComponentFactory
org.libsdl.app.SDLActivity
androidx.appcompat.app.AlertController$RecycleListView
androidx.lifecycle.Lifecycling$1
org.libsdl.app.SDLClipboardHandler
androidx.versionedparcelable.CustomVersionedParcelable
androidx.core.graphics.drawable.IconCompat
org.libsdl.app.SDLHapticHandler_API26
org.libsdl.app.SDLGenericMotionListener_API12
androidx.emoji2.text.EmojiCompatInitializer
org.libsdl.app.HIDDeviceUSB
org.libsdl.app.SDLActivity$2
androidx.lifecycle.ReflectiveGenericLifecycleObserver
org.libsdl.app.SDLActivity$ShowTextInputTask
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.activity.result.ActivityResultRegistry$1
androidx.appcompat.widget.ActionMenuView
androidx.annotation.Keep
androidx.appcompat.widget.ActivityChooserView$InnerLayout
org.libsdl.app.SDLInputConnection
org.libsdl.app.SDLJoystickHandler_API19
org.libsdl.app.HIDDeviceManager$2
androidx.lifecycle.ProcessLifecycleInitializer
org.libsdl.app.SDLActivity$5
org.libsdl.app.SDLJoystickHandler
org.libsdl.app.HIDDeviceBLESteamController
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation
org.libsdl.app.SDLControllerManager
androidx.appcompat.view.menu.ActionMenuItemView
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.fragment.app.FragmentManager$6
org.libsdl.app.SDLActivity$7
android.support.v4.app.RemoteActionCompatParcelizer
org.libsdl.app.HIDDeviceBLESteamController$3
androidx.appcompat.widget.SearchView
org.libsdl.app.SDLActivity$SDLCommandHandler
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.core.widget.NestedScrollView
androidx.appcompat.view.menu.ExpandedMenuView
org.libsdl.app.HIDDeviceManager: java.lang.String ACTION_USB_PERMISSION
org.libsdl.app.SDLClipboardHandler: android.content.ClipboardManager mClipMgr
org.love2d.android.GameActivity: int[] recordAudioRequestDummy
org.libsdl.app.SDLActivity: int SDL_ORIENTATION_PORTRAIT_FLIPPED
org.libsdl.app.HIDDeviceBLESteamController: int TRANSPORT_LE
org.libsdl.app.HIDDeviceBLESteamController$1: org.libsdl.app.HIDDeviceBLESteamController val$finalThis
org.love2d.android.GameActivity: boolean shortEdgesMode
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation[] $VALUES
org.libsdl.app.HIDDeviceBLESteamController: java.util.UUID reportCharacteristic
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: boolean mResult
org.libsdl.app.SDLActivity: org.libsdl.app.SDLActivity$NativeState mCurrentNativeState
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
org.libsdl.app.HIDDeviceManager$1: org.libsdl.app.HIDDeviceManager this$0
org.libsdl.app.HIDDeviceBLESteamController$1: org.libsdl.app.HIDDeviceBLESteamController this$0
org.libsdl.app.SDLActivity: int SDL_MAJOR_VERSION
org.libsdl.app.SDLActivity: java.util.Locale mCurrentLocale
org.libsdl.app.SDLAudioManager: android.media.AudioTrack mAudioTrack
org.libsdl.app.HIDDeviceBLESteamController: org.libsdl.app.HIDDeviceBLESteamController$GattOperation mCurrentOperation
org.libsdl.app.HIDDeviceManager: android.content.BroadcastReceiver mBluetoothBroadcast
org.libsdl.app.SDLActivity$ShowTextInputTask: int w
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothGatt mGatt
org.love2d.android.GameActivity: android.util.DisplayMetrics metrics
org.libsdl.app.HIDDeviceUSB: int mInterfaceIndex
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: java.util.ArrayList hats
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
org.libsdl.app.SDLActivity: int SDL_MICRO_VERSION
org.love2d.android.GameActivity: int EXTERNAL_STORAGE_REQUEST_CODE
org.libsdl.app.SDLActivity: org.libsdl.app.SDLActivity mSingleton
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
org.libsdl.app.SDLActivity: boolean mHasMultiWindow
org.love2d.android.GameActivity: java.lang.String gamePath
org.libsdl.app.SDLGenericMotionListener_API26: boolean mRelativeModeEnabled
org.libsdl.app.HIDDeviceBLESteamController: android.os.Handler mHandler
org.libsdl.app.SDLActivity: int COMMAND_CHANGE_WINDOW_STYLE
org.libsdl.app.SDLActivity$6: org.libsdl.app.SDLActivity this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
org.love2d.android.GameActivity: int safeAreaTop
org.libsdl.app.SDLActivity$5: org.libsdl.app.SDLActivity this$0
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
org.libsdl.app.SDLActivity$ShowTextInputTask: int x
org.libsdl.app.SDLActivity: int mLastCursorID
org.libsdl.app.HIDDeviceUSB: org.libsdl.app.HIDDeviceManager mManager
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
org.libsdl.app.SDLActivity: java.util.Hashtable mCursors
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_HAND
org.libsdl.app.SDLActivity: android.view.ViewGroup mLayout
org.libsdl.app.SDLActivity: int SDL_ORIENTATION_LANDSCAPE_FLIPPED
org.libsdl.app.SDLActivity: boolean mFullscreenModeActive
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation CHR_WRITE
org.libsdl.app.HIDDeviceUSB: android.hardware.usb.UsbDeviceConnection mConnection
org.libsdl.app.SDLActivity: int COMMAND_USER
org.libsdl.app.HIDDeviceUSB: boolean mRunning
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
org.love2d.android.GameActivity: android.os.Vibrator vibrator
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
org.libsdl.app.HIDDeviceManager: java.util.HashMap mBluetoothDevices
org.libsdl.app.SDLActivity: org.libsdl.app.SDLClipboardHandler mClipboardHandler
org.libsdl.app.SDLSurface: float mHeight
org.libsdl.app.SDLControllerManager: org.libsdl.app.SDLHapticHandler mHapticHandler
org.libsdl.app.HIDDeviceManager: java.util.List mLastBluetoothDevices
org.libsdl.app.HIDDeviceBLESteamController: boolean mIsReconnecting
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
org.libsdl.app.HIDDeviceBLESteamController: java.util.UUID inputCharacteristic
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
org.libsdl.app.SDLActivity: int[] messageboxSelection
org.libsdl.app.SDLAudioManager: android.media.AudioRecord mAudioRecord
org.libsdl.app.HIDDeviceManager$3: org.libsdl.app.HIDDeviceManager this$0
org.libsdl.app.HIDDeviceUSB: int mInterface
org.libsdl.app.SDLActivity$ShowTextInputTask: int HEIGHT_PADDING
org.libsdl.app.HIDDeviceManager: android.content.Context mContext
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_SIZENESW
org.libsdl.app.SDLActivity$1: org.libsdl.app.SDLActivity this$0
org.libsdl.app.SDLActivity$1OneShotTask: int mGravity
org.libsdl.app.SDLActivity: boolean mExitCalledFromJava
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
org.libsdl.app.SDLControllerManager: java.lang.String TAG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
org.libsdl.app.SDLActivity: int mCurrentOrientation
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation CHR_READ
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
org.libsdl.app.SDLActivity: boolean mHasFocus
org.libsdl.app.HIDDeviceManager: int mNextDeviceId
org.libsdl.app.HIDDeviceBLESteamController$4: int[] $SwitchMap$org$libsdl$app$HIDDeviceBLESteamController$GattOperation$Operation
org.libsdl.app.HIDDeviceManager: boolean mIsChromebook
org.libsdl.app.SDLActivity: int COMMAND_CHANGE_TITLE
org.libsdl.app.HIDDeviceUSB: android.hardware.usb.UsbDevice mDevice
org.libsdl.app.DummyEdit: android.view.inputmethod.InputConnection ic
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
org.love2d.android.GameActivity: boolean embed
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
org.libsdl.app.SDLSurface: float mWidth
org.libsdl.app.SDLActivity: int COMMAND_TEXTEDIT_HIDE
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_SIZEWE
org.love2d.android.GameActivity: boolean immersiveActive
org.libsdl.app.HIDDeviceManager: android.content.SharedPreferences mSharedPreferences
org.libsdl.app.SDLHapticHandler: java.util.ArrayList mHaptics
org.libsdl.app.SDLInputConnection: android.widget.EditText mEditText
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: java.util.UUID mUuid
org.libsdl.app.HIDDeviceManager: android.hardware.usb.UsbManager mUsbManager
org.libsdl.app.SDLSurface: android.view.Display mDisplay
org.libsdl.app.HIDDeviceBLESteamController: int mDeviceId
org.libsdl.app.HIDDeviceManager: java.lang.String TAG
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
org.libsdl.app.SDLActivity: boolean mScreenKeyboardShown
org.libsdl.app.SDLSurface: boolean mIsSurfaceReady
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_NO
org.libsdl.app.SDLActivity: boolean mBrokenLibraries
org.libsdl.app.SDLGenericMotionListener_API24: boolean mRelativeModeEnabled
org.libsdl.app.SDLActivity$7: org.libsdl.app.SDLActivity this$0
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_IBEAM
org.libsdl.app.SDLActivity: org.libsdl.app.HIDDeviceManager mHIDDeviceManager
org.love2d.android.GameActivity: int safeAreaLeft
org.libsdl.app.HIDDeviceManager: org.libsdl.app.HIDDeviceManager sManager
org.love2d.android.GameActivity: int safeAreaBottom
org.libsdl.app.HIDDeviceBLESteamController: java.lang.String TAG
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_WAITARROW
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_SIZENWSE
org.libsdl.app.HIDDeviceBLESteamController: boolean mIsConnected
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothDevice mDevice
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
org.libsdl.app.HIDDeviceUSB: android.hardware.usb.UsbEndpoint mInputEndpoint
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_SIZENS
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
org.libsdl.app.HIDDeviceBLESteamController: int TRANSPORT_BREDR
org.libsdl.app.HIDDeviceBLESteamController: org.libsdl.app.HIDDeviceManager mManager
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
org.libsdl.app.SDLActivity$ShowTextInputTask: int y
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: java.lang.String name
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: android.bluetooth.BluetoothGatt mGatt
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_SIZEALL
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState INIT
org.libsdl.app.SDLActivity: org.libsdl.app.DummyEdit mTextEdit
org.libsdl.app.HIDDeviceUSB: android.hardware.usb.UsbEndpoint mOutputEndpoint
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: int device_id
org.libsdl.app.SDLActivity: int SDL_ORIENTATION_LANDSCAPE
org.libsdl.app.HIDDeviceBLESteamController$3: org.libsdl.app.HIDDeviceBLESteamController this$0
org.libsdl.app.SDLActivity$1OneShotTask: int mYOffset
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
org.libsdl.app.HIDDeviceBLESteamController: int CHROMEBOOK_CONNECTION_CHECK_INTERVAL
org.libsdl.app.HIDDeviceManager: android.content.BroadcastReceiver mUsbBroadcast
org.love2d.android.GameActivity: int[] externalStorageRequestDummy
org.libsdl.app.SDLActivity: java.lang.String TAG
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
org.libsdl.app.HIDDeviceBLESteamController$2: org.libsdl.app.HIDDeviceBLESteamController this$0
org.libsdl.app.HIDDeviceBLESteamController: int TRANSPORT_AUTO
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
org.libsdl.app.HIDDeviceBLESteamController: java.util.LinkedList mOperations
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation ENABLE_NOTIFICATION
org.libsdl.app.SDLActivity: int COMMAND_SET_KEEP_SCREEN_ON
org.libsdl.app.SDLActivity$3: org.libsdl.app.SDLActivity this$0
org.libsdl.app.SDLActivity$1OneShotTask: java.lang.String mMessage
org.libsdl.app.SDLActivity$3: android.os.Bundle val$args
org.love2d.android.GameActivity: boolean $assertionsDisabled
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: java.lang.String desc
org.libsdl.app.SDLActivity$6: android.util.SparseArray val$mapping
org.libsdl.app.SDLActivity$ShowTextInputTask: int h
org.libsdl.app.SDL: android.content.Context mContext
org.libsdl.app.SDLActivity: org.libsdl.app.SDLGenericMotionListener_API12 mMotionListener
org.libsdl.app.SDLActivity: android.os.Handler commandHandler
org.libsdl.app.SDLHapticHandler$SDLHaptic: android.os.Vibrator vib
org.libsdl.app.SDLActivity: java.lang.Thread mSDLThread
org.libsdl.app.SDLActivity: int SDL_ORIENTATION_PORTRAIT
org.libsdl.app.HIDDeviceBLESteamController: byte[] enterValveMode
org.libsdl.app.HIDDeviceUSB: boolean mFrozen
org.libsdl.app.HIDDeviceUSB$InputThread: org.libsdl.app.HIDDeviceUSB this$0
org.love2d.android.GameActivity: boolean storagePermissionUnnecessary
org.libsdl.app.HIDDeviceManager: java.util.HashMap mDevicesById
org.libsdl.app.SDLActivity: java.lang.Runnable rehideSystemUi
org.libsdl.app.HIDDeviceUSB: int mDeviceId
org.libsdl.app.HIDDeviceManager$2: org.libsdl.app.HIDDeviceManager this$0
org.libsdl.app.SDLActivity: org.libsdl.app.SDLSurface mSurface
org.libsdl.app.SDLControllerManager: org.libsdl.app.SDLJoystickHandler mJoystickHandler
org.libsdl.app.SDLActivity: int SDL_ORIENTATION_UNKNOWN
org.libsdl.app.SDLSurface: android.hardware.SensorManager mSensorManager
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState RESUMED
org.libsdl.app.SDLActivity$1OneShotTask: int mXOffset
org.libsdl.app.HIDDeviceBLESteamController: boolean mFrozen
org.libsdl.app.SDLActivity$2: org.libsdl.app.SDLActivity this$0
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
org.libsdl.app.HIDDeviceUSB: org.libsdl.app.HIDDeviceUSB$InputThread mInputThread
org.love2d.android.GameActivity: boolean needToCopyGameInArchive
org.libsdl.app.SDLActivity: boolean mIsResumedCalled
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState PAUSED
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_CROSSHAIR
org.libsdl.app.HIDDeviceManager: int sManagerRefCount
org.libsdl.app.HIDDeviceManager: android.bluetooth.BluetoothManager mBluetoothManager
kotlinx.coroutines.DefaultExecutor: int debugStatus
org.libsdl.app.SDLActivity$1OneShotTask: int mDuration
org.libsdl.app.HIDDeviceManager: android.os.Handler mHandler
org.libsdl.app.HIDDeviceBLESteamController: boolean mIsChromebook
org.libsdl.app.SDLActivity: org.libsdl.app.SDLActivity$NativeState mNextNativeState
org.libsdl.app.SDLAudioManager: java.lang.String TAG
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState[] $VALUES
org.libsdl.app.HIDDeviceBLESteamController: boolean mIsRegistered
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation mOp
org.libsdl.app.HIDDeviceUSB: java.lang.String TAG
org.libsdl.app.SDLHapticHandler$SDLHaptic: java.lang.String name
org.libsdl.app.SDLInputConnection: java.lang.String mCommittedText
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.libsdl.app.SDLActivity: int SDL_MINOR_VERSION
org.libsdl.app.HIDDeviceManager$3: org.libsdl.app.HIDDeviceManager val$finalThis
org.libsdl.app.SDLJoystickHandler_API16: java.util.ArrayList mJoysticks
org.libsdl.app.HIDDeviceBLESteamController: java.util.UUID steamControllerService
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_WAIT
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: byte[] mValue
org.libsdl.app.SDLHapticHandler$SDLHaptic: int device_id
org.love2d.android.GameActivity: int safeAreaRight
org.libsdl.app.SDLActivity$5: int val$id
org.libsdl.app.SDLActivity$5: android.app.AlertDialog val$dialog
org.libsdl.app.SDLActivity: int SDL_SYSTEM_CURSOR_ARROW
org.libsdl.app.SDLActivity$4: org.libsdl.app.SDLActivity this$0
org.love2d.android.GameActivity: int RECORD_AUDIO_REQUEST_CODE
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: java.util.ArrayList axes
org.libsdl.app.SDLHapticHandler$SDLHaptic: SDLHapticHandler$SDLHaptic()
org.libsdl.app.SDLSurface: boolean onCapturedPointerEvent(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
org.libsdl.app.SDLActivity$6: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
org.libsdl.app.DummyEdit: DummyEdit(android.content.Context)
org.libsdl.app.SDLJoystickHandler_API19: int getButtonMask(android.view.InputDevice)
org.libsdl.app.SDLActivity: java.lang.String nativeGetHint(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
org.libsdl.app.SDL: android.content.Context getContext()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
org.love2d.android.GameActivity: GameActivity()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
org.libsdl.app.HIDDeviceManager: void HIDDeviceFeatureReport(int,byte[])
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
org.libsdl.app.HIDDeviceManager: void disconnectBluetoothDevice(android.bluetooth.BluetoothDevice)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
org.libsdl.app.HIDDevice: int sendOutputReport(byte[])
org.libsdl.app.SDLActivity: boolean onUnhandledMessage(int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
org.libsdl.app.SDLGenericMotionListener_API12: boolean supportsRelativeMouse()
org.libsdl.app.SDLActivity$NativeState: SDLActivity$NativeState(java.lang.String,int)
org.libsdl.app.HIDDeviceBLESteamController: android.hardware.usb.UsbDevice getDevice()
org.libsdl.app.HIDDeviceBLESteamController: void checkConnectionForChromebookIssue()
org.libsdl.app.HIDDeviceBLESteamController: void close()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
org.libsdl.app.SDLActivity: void initialize()
org.libsdl.app.HIDDeviceManager: android.hardware.usb.UsbManager getUSBManager()
org.libsdl.app.SDLJoystickHandler_API16: int getButtonMask(android.view.InputDevice)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
org.libsdl.app.SDLActivity$2: SDLActivity$2(org.libsdl.app.SDLActivity)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
org.libsdl.app.SDLActivity$4: void onDismiss(android.content.DialogInterface)
org.libsdl.app.SDLActivity: void onNativeSurfaceChanged()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
org.libsdl.app.HIDDeviceBLESteamController: int sendOutputReport(byte[])
org.libsdl.app.SDLAudioManager: int captureReadByteBuffer(byte[],boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
org.libsdl.app.SDLJoystickHandler_API16$RangeComparator: int compare(java.lang.Object,java.lang.Object)
org.libsdl.app.HIDDeviceBLESteamController: int getVersion()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
org.libsdl.app.HIDDeviceBLESteamController: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
org.libsdl.app.SDLActivity: boolean showTextInput(int,int,int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
org.libsdl.app.SDLControllerManager: int nativeRemoveHaptic(int)
org.libsdl.app.SDLJoystickHandler: boolean handleMotionEvent(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
org.libsdl.app.SDLAudioManager: void audioWriteShortBuffer(short[])
org.libsdl.app.SDLActivity: void onNativeKeyboardFocusLost()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
org.libsdl.app.SDLControllerManager: void onNativeHat(int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
org.libsdl.app.SDLActivity: void nativeQuit()
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
org.libsdl.app.SDLAudioManager: int captureReadFloatBuffer(float[],boolean)
org.libsdl.app.DummyEdit: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
org.libsdl.app.SDLHapticHandler: void pollHapticDevices()
org.libsdl.app.SDLJoystickHandler_API16: SDLJoystickHandler_API16()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.libsdl.app.SDLGenericMotionListener_API12: float getEventX(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.libsdl.app.SDLActivity: boolean setCustomCursor(int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
org.libsdl.app.SDL: void setupJNI()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
org.love2d.android.GameActivity: void showExternalStoragePermissionMissingDialog()
org.libsdl.app.HIDDeviceBLESteamController: int getConnectionState()
org.libsdl.app.HIDDeviceManager: boolean isXbox360Controller(android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.love2d.android.GameActivity: void copyGameInsideArchive()
org.libsdl.app.SDLActivity: boolean isDeXMode()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
org.libsdl.app.SDLMain: SDLMain()
org.love2d.android.GameActivity: java.lang.String getMainSharedObject()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
org.libsdl.app.SDLActivity: boolean onNativeSoftReturnKey()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
org.libsdl.app.SDLActivity: double getDiagonal()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
org.libsdl.app.SDLClipboardHandler: SDLClipboardHandler()
org.libsdl.app.SDLControllerManager: void hapticStop(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
org.libsdl.app.HIDDeviceManager: boolean openDevice(int)
org.libsdl.app.SDLSurface: void enableSensor(int,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
org.libsdl.app.SDLHapticHandler: SDLHapticHandler()
org.libsdl.app.SDLActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
org.libsdl.app.SDLActivity: android.util.DisplayMetrics getDisplayDPI()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
org.libsdl.app.SDLActivity$1OneShotTask: SDLActivity$1OneShotTask(java.lang.String,int,int,int,int)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
org.libsdl.app.SDLActivity: int nativeRunMain(java.lang.String,java.lang.String,java.lang.Object)
org.libsdl.app.SDLSurface: SDLSurface(android.content.Context)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: boolean finish()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
org.libsdl.app.SDLJoystickHandler_API19: SDLJoystickHandler_API19()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
org.libsdl.app.SDLControllerManager: void pollInputDevices()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: HIDDeviceBLESteamController$GattOperation$Operation(java.lang.String,int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
org.love2d.android.GameActivity: boolean hasBackgroundMusic()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
org.libsdl.app.SDLHapticHandler: org.libsdl.app.SDLHapticHandler$SDLHaptic getHaptic(int)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
org.libsdl.app.SDLInputConnection: android.text.Editable getEditable()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
org.libsdl.app.SDLActivity: void onPause()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
org.libsdl.app.SDLControllerManager: boolean isDeviceSDLJoystick(int)
org.love2d.android.GameActivity: java.lang.String[] buildFileTree()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
org.libsdl.app.SDLControllerManager: void hapticRun(int,float,int)
org.libsdl.app.HIDDevice: java.lang.String getSerialNumber()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
org.libsdl.app.SDLActivity: void onBackPressed()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.libsdl.app.SDLActivity: boolean clipboardHasText()
org.libsdl.app.SDLControllerManager: void pollHapticDevices()
org.libsdl.app.HIDDeviceBLESteamController: void finishCurrentGattOperation()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
org.love2d.android.GameActivity: void vibrate(double)
org.libsdl.app.SDLAudioManager: int nativeSetupJNI()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
org.libsdl.app.HIDDeviceBLESteamController: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
org.libsdl.app.SDLActivity: void nativeResume()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
org.libsdl.app.HIDDeviceManager$2: HIDDeviceManager$2(org.libsdl.app.HIDDeviceManager)
org.libsdl.app.HIDDeviceUSB: boolean getFeatureReport(byte[])
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
org.libsdl.app.SDLActivity: int getCurrentOrientation()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState[] values()
org.libsdl.app.SDLJoystickHandler_API16: int getProductId(android.view.InputDevice)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
org.libsdl.app.SDLJoystickHandler_API16: void pollInputDevices()
org.libsdl.app.SDLGenericMotionListener_API24: float getEventX(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
org.love2d.android.GameActivity: boolean openURLFromLOVE(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.libsdl.app.SDLActivity: void pressBackButton()
org.libsdl.app.SDLGenericMotionListener_API26: SDLGenericMotionListener_API26()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
org.libsdl.app.SDLActivity$SDLCommandHandler: SDLActivity$SDLCommandHandler()
org.libsdl.app.HIDDevice: boolean open()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.libsdl.app.HIDDeviceBLESteamController: int getVendorId()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
org.libsdl.app.SDLActivity: void onNativeTouch(int,int,int,float,float,float)
org.libsdl.app.HIDDeviceManager: boolean getFeatureReport(int,byte[])
org.libsdl.app.SDLActivity: void nativeAddTouch(int,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
org.libsdl.app.HIDDevice: int getVersion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
org.love2d.android.GameActivity: int getAudioFreq()
org.libsdl.app.SDLActivity: void onNativeMouse(int,int,float,float,boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
org.libsdl.app.HIDDeviceBLESteamController: void setRegistered()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: void run()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
org.libsdl.app.SDLActivity: boolean setActivityTitle(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
org.libsdl.app.SDLInputConnection: void updateText()
org.libsdl.app.HIDDeviceBLESteamController$1: void run()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
org.love2d.android.GameActivity: void showRecordingAudioPermissionMissingDialog()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
org.libsdl.app.SDLClipboardHandler: boolean clipboardHasText()
androidx.appcompat.widget.SearchView: int getInputType()
org.libsdl.app.SDLActivity: java.lang.String clipboardGetText()
org.libsdl.app.SDLActivity: void destroyCustomCursor(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
org.libsdl.app.HIDDeviceUSB: android.hardware.usb.UsbDevice getDevice()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
org.libsdl.app.SDLHapticHandler_API26: void run(int,float,int)
org.libsdl.app.SDLActivity: java.lang.String getMainSharedObject()
org.libsdl.app.SDLActivity: void onSystemUiVisibilityChange(int)
org.libsdl.app.SDLActivity$6: SDLActivity$6(org.libsdl.app.SDLActivity,android.util.SparseArray)
org.libsdl.app.SDLActivity: void onNativeKeyUp(int)
org.libsdl.app.HIDDeviceUSB: int sendFeatureReport(byte[])
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
org.libsdl.app.SDLActivity: boolean getManifestEnvironmentVariables()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
org.libsdl.app.HIDDeviceManager: void closeDevice(int)
org.libsdl.app.HIDDeviceBLESteamController: boolean open()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
org.love2d.android.GameActivity: java.lang.String getGamePath()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
org.libsdl.app.SDLActivity: android.view.View getContentView()
org.libsdl.app.SDLGenericMotionListener_API26: float getEventX(android.view.MotionEvent)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.libsdl.app.HIDDeviceBLESteamController: void readCharacteristic(java.util.UUID)
org.libsdl.app.HIDDeviceBLESteamController: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
org.libsdl.app.SDLJoystickHandler_API16: org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick getJoystick(int)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation[] $values()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
org.libsdl.app.SDLActivity: boolean sendCommand(int,java.lang.Object)
org.libsdl.app.HIDDeviceManager: void shutdownUSB()
androidx.startup.InitializationProvider: InitializationProvider()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
org.love2d.android.GameActivity: void onResume()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState[] $values()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
org.libsdl.app.HIDDeviceManager: void shutdownBluetooth()
org.libsdl.app.SDLJoystickHandler_API16: int getVendorId(android.view.InputDevice)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothGatt connectGatt()
org.libsdl.app.HIDDeviceBLESteamController$1: HIDDeviceBLESteamController$1(org.libsdl.app.HIDDeviceBLESteamController,org.libsdl.app.HIDDeviceBLESteamController)
org.libsdl.app.SDLActivity: void nativeSetenv(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
org.libsdl.app.SDLActivity$5: SDLActivity$5(org.libsdl.app.SDLActivity,int,android.app.AlertDialog)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
org.love2d.android.GameActivity: int getAudioSMP()
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation[] values()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
org.libsdl.app.SDLActivity: int messageboxShowMessageBox(int,java.lang.String,java.lang.String,int[],int[],java.lang.String[],int[])
org.libsdl.app.SDLActivity: void onNativeSurfaceDestroyed()
org.libsdl.app.SDLAudioManager: int[] audioOpen(int,int,int,int)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceManager: android.content.Context getContext()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.libsdl.app.SDLActivity$1: void onClick(android.content.DialogInterface,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
org.libsdl.app.SDLActivity$7: void run()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
org.libsdl.app.SDLActivity: void onNativeLocaleChanged()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
org.libsdl.app.SDLActivity: void startNative()
org.libsdl.app.HIDDevice: android.hardware.usb.UsbDevice getDevice()
org.libsdl.app.HIDDeviceManager: boolean isSteamController(android.bluetooth.BluetoothDevice)
org.libsdl.app.SDLActivity: void onNativeSurfaceCreated()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
org.libsdl.app.SDLActivity: java.lang.String getMainFunction()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
org.libsdl.app.SDLControllerManager: int nativeAddJoystick(int,java.lang.String,java.lang.String,int,int,boolean,int,int,int,int)
org.libsdl.app.HIDDevice: void shutdown()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.widget.SearchView: void setInputType(int)
org.libsdl.app.HIDDeviceManager: void handleUsbDevicePermission(android.hardware.usb.UsbDevice,boolean)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
org.libsdl.app.SDLActivity: boolean shouldMinimizeOnFocusLoss()
org.libsdl.app.SDLGenericMotionListener_API24: boolean supportsRelativeMouse()
org.libsdl.app.SDLControllerManager: int nativeRemoveJoystick(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
org.libsdl.app.HIDDeviceBLESteamController: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
org.libsdl.app.HIDDeviceBLESteamController: java.lang.String getProductName()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
org.libsdl.app.SDLAudioManager: java.lang.String getAudioFormatString(int)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
org.libsdl.app.SDLActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
org.libsdl.app.SDLJoystickHandler: void pollInputDevices()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
org.libsdl.app.SDLGenericMotionListener_API26: void reclaimRelativeMouseModeIfNeeded()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
org.libsdl.app.SDL: SDL()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
org.libsdl.app.HIDDeviceManager: int getDeviceIDForIdentifier(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
org.libsdl.app.SDLActivity$1OneShotTask: void run()
org.libsdl.app.HIDDeviceUSB: java.lang.String getManufacturerName()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.libsdl.app.HIDDeviceUSB: java.lang.String getDeviceName()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
org.libsdl.app.HIDDeviceManager: void connectHIDDeviceUSB(android.hardware.usb.UsbDevice)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
org.libsdl.app.SDLJoystickHandler_API16$SDLJoystick: SDLJoystickHandler_API16$SDLJoystick()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
org.libsdl.app.HIDDeviceBLESteamController$3: HIDDeviceBLESteamController$3(org.libsdl.app.HIDDeviceBLESteamController)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
org.love2d.android.GameActivity: android.util.DisplayMetrics getMetrics()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceManager: void setFrozen(boolean)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
org.libsdl.app.HIDDevice: int getVendorId()
org.libsdl.app.SDLActivity: boolean setRelativeMouseEnabled(boolean)
org.libsdl.app.SDLControllerManager: void onNativeJoy(int,int,float)
org.libsdl.app.SDLActivity: void setOrientation(int,int,boolean,java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
org.libsdl.app.HIDDeviceUSB$InputThread: void run()
org.libsdl.app.SDLGenericMotionListener_API24: float getEventY(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.libsdl.app.SDLActivity: void onCreate(android.os.Bundle)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
org.libsdl.app.HIDDeviceBLESteamController: void shutdown()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
org.libsdl.app.SDLActivity: void resetNative()
org.libsdl.app.SDLGenericMotionListener_API26: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
org.libsdl.app.HIDDeviceUSB: void close()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
org.libsdl.app.SDLActivity: void nativePermissionResult(int,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
org.libsdl.app.SDLGenericMotionListener_API12: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
org.libsdl.app.SDLInputConnection: void nativeGenerateScancodeForUnichar(char)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
org.libsdl.app.SDLControllerManager: void initialize()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
org.libsdl.app.SDLControllerManager: boolean handleJoystickMotionEvent(android.view.MotionEvent)
org.libsdl.app.SDLGenericMotionListener_API26: float getEventY(android.view.MotionEvent)
org.love2d.android.GameActivity: boolean hasExternalStoragePermission()
org.libsdl.app.HIDDeviceBLESteamController: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)
org.libsdl.app.SDL: void setContext(android.content.Context)
org.libsdl.app.SDL: void initialize()
org.libsdl.app.SDLActivity$3: void run()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
org.libsdl.app.HIDDeviceUSB: void setFrozen(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.libsdl.app.HIDDeviceManager: org.libsdl.app.HIDDevice getDevice(int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceBLESteamController: HIDDeviceBLESteamController(org.libsdl.app.HIDDeviceManager,android.bluetooth.BluetoothDevice)
org.libsdl.app.SDLGenericMotionListener_API24: boolean setRelativeMouseEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
org.libsdl.app.SDLInputConnection: boolean deleteSurroundingText(int,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
org.libsdl.app.HIDDevice: int getId()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
org.libsdl.app.SDLActivity: void nativeSendQuit()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
org.libsdl.app.SDLAudioManager: SDLAudioManager()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.libsdl.app.SDL: void loadLibrary(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.love2d.android.GameActivity: org.libsdl.app.SDLActivity access$000()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
org.libsdl.app.SDLActivity: void onNativeAccel(float,float,float)
org.love2d.android.GameActivity: java.lang.String[] getLibraries()
org.libsdl.app.HIDDeviceBLESteamController: void reconnect()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
org.libsdl.app.HIDDeviceUSB$InputThread: HIDDeviceUSB$InputThread(org.libsdl.app.HIDDeviceUSB)
org.libsdl.app.SDLControllerManager: int onNativePadDown(int,int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
org.love2d.android.GameActivity: boolean hasRecordAudioPermission()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
org.libsdl.app.HIDDeviceBLESteamController: boolean isRegistered()
org.libsdl.app.HIDDeviceBLESteamController: int getProductId()
org.libsdl.app.HIDDeviceBLESteamController: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
org.libsdl.app.HIDDevice: java.lang.String getManufacturerName()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
kotlin.random.Random: Random()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
org.libsdl.app.HIDDeviceManager$2: void onReceive(android.content.Context,android.content.Intent)
org.libsdl.app.SDLActivity$2: void run()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
org.libsdl.app.SDLMain: void run()
org.libsdl.app.SDLActivity$7: SDLActivity$7(org.libsdl.app.SDLActivity)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
org.libsdl.app.HIDDeviceManager: void initializeUSB()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
org.love2d.android.GameActivity: void onPause()
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation writeCharacteristic(android.bluetooth.BluetoothGatt,java.util.UUID,byte[])
org.libsdl.app.SDLAudioManager: void initialize()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
org.libsdl.app.SDLGenericMotionListener_API12: boolean inRelativeMode()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
org.libsdl.app.SDLGenericMotionListener_API26: boolean setRelativeMouseEnabled(boolean)
org.libsdl.app.HIDDeviceManager: boolean connectBluetoothDevice(android.bluetooth.BluetoothDevice)
org.libsdl.app.HIDDeviceManager: void release(org.libsdl.app.HIDDeviceManager)
org.libsdl.app.HIDDeviceUSB: int getVersion()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
org.libsdl.app.SDLActivity$SDLCommandHandler: void handleMessage(android.os.Message)
org.love2d.android.GameActivity: void onCreate(android.os.Bundle)
org.libsdl.app.HIDDeviceManager: void HIDDeviceDisconnected(int)
org.libsdl.app.SDLActivity: void appQuitFinish()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
org.libsdl.app.SDLGenericMotionListener_API26: boolean inRelativeMode()
org.libsdl.app.HIDDeviceManager: boolean isXboxOneController(android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
org.libsdl.app.SDLActivity: void nativeLowMemory()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
org.libsdl.app.HIDDeviceManager$3: HIDDeviceManager$3(org.libsdl.app.HIDDeviceManager,org.libsdl.app.HIDDeviceManager)
org.libsdl.app.SDLActivity: android.content.Context getContext()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
org.libsdl.app.SDLActivity: void onNativeResize()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
org.libsdl.app.HIDDeviceBLESteamController: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
org.libsdl.app.SDLActivity: void requestPermission(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.libsdl.app.SDLInputConnection: boolean sendKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
org.libsdl.app.HIDDeviceBLESteamController: void setFrozen(boolean)
org.love2d.android.GameActivity: void onDestroy()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
org.libsdl.app.SDLActivity: void setWindowStyle(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
org.libsdl.app.HIDDeviceBLESteamController: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
org.love2d.android.GameActivity: void setImmersiveMode(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
org.libsdl.app.HIDDeviceManager$3: void run()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
org.libsdl.app.SDLActivity: void onNativeOrientationChanged(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
org.libsdl.app.SDLActivity: int createCustomCursor(int[],int,int,int,int)
org.libsdl.app.SDLActivity: boolean handleKeyEvent(android.view.View,int,android.view.KeyEvent,android.view.inputmethod.InputConnection)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
org.libsdl.app.SDLActivity: void nativeSetScreenResolution(int,int,int,int,float)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
org.libsdl.app.HIDDeviceManager: boolean initialize(boolean,boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
org.libsdl.app.SDLJoystickHandler_API16: boolean handleMotionEvent(android.view.MotionEvent)
org.libsdl.app.SDLActivity: java.lang.String nativeGetVersion()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)
org.love2d.android.GameActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.libsdl.app.SDLActivity: boolean isAndroidTV()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
org.libsdl.app.SDLActivity: org.libsdl.app.SDLSurface createSDLSurface(android.content.Context)
org.libsdl.app.SDLActivity: boolean nativeGetHintBoolean(java.lang.String,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
org.libsdl.app.SDLActivity: void loadLibraries()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
org.libsdl.app.SDLActivity$1: SDLActivity$1(org.libsdl.app.SDLActivity)
org.libsdl.app.HIDDeviceManager: org.libsdl.app.HIDDeviceManager acquire(android.content.Context)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
org.love2d.android.GameActivity: void checkLovegameFolder()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.libsdl.app.HIDDeviceBLESteamController: boolean getFeatureReport(byte[])
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
org.libsdl.app.SDLInputConnection: boolean setComposingText(java.lang.CharSequence,int)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
org.libsdl.app.SDLAudioManager: int[] captureOpen(int,int,int,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
org.libsdl.app.SDLGenericMotionListener_API12: float getEventY(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
org.libsdl.app.HIDDeviceBLESteamController: int getId()
org.libsdl.app.SDLActivity: void onNativeDropFile(java.lang.String)
org.libsdl.app.SDLActivity$4: SDLActivity$4(org.libsdl.app.SDLActivity)
org.libsdl.app.HIDDeviceBLESteamController: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
org.libsdl.app.HIDDeviceBLESteamController: void executeNextGattOperation()
org.libsdl.app.SDLActivity: boolean isScreenKeyboardShown()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
org.libsdl.app.SDLSurface: void onAccuracyChanged(android.hardware.Sensor,int)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
org.libsdl.app.HIDDeviceUSB: java.lang.String getSerialNumber()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
org.libsdl.app.HIDDeviceManager: void chromebookConnectionHandler()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
org.libsdl.app.SDLGenericMotionListener_API24: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
org.libsdl.app.SDLSurface: android.view.Surface getNativeSurface()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
org.libsdl.app.SDLControllerManager: int nativeSetupJNI()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothGatt connectGatt(boolean)
org.libsdl.app.SDLActivity: int nativeSetupJNI()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
org.libsdl.app.SDLSurface: void handleResume()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
org.libsdl.app.SDLJoystickHandler: SDLJoystickHandler()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
org.libsdl.app.HIDDeviceManager: void access$000(org.libsdl.app.HIDDeviceManager,android.hardware.usb.UsbDevice)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothGatt access$100(org.libsdl.app.HIDDeviceBLESteamController)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
org.libsdl.app.HIDDeviceBLESteamController: void writeCharacteristic(java.util.UUID,byte[])
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
org.libsdl.app.SDLActivity: boolean supportsRelativeMouse()
org.libsdl.app.SDLGenericMotionListener_API24: boolean inRelativeMode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
org.libsdl.app.HIDDeviceUSB: HIDDeviceUSB(org.libsdl.app.HIDDeviceManager,android.hardware.usb.UsbDevice,int)
org.libsdl.app.HIDDeviceManager: void HIDDeviceReleaseCallback()
org.libsdl.app.SDLActivity: void onStop()
org.love2d.android.GameActivity: void requestRecordAudioPermission()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
org.libsdl.app.SDLInputConnection: boolean commitText(java.lang.CharSequence,int)
org.libsdl.app.SDLHapticHandler: void stop(int)
org.libsdl.app.SDLSurface: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
org.libsdl.app.SDLInputConnection: void nativeCommitText(java.lang.String,int)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.libsdl.app.HIDDeviceManager$1: void onReceive(android.content.Context,android.content.Intent)
org.love2d.android.GameActivity: void onNewIntent(android.content.Intent)
org.libsdl.app.SDLClipboardHandler: void clipboardSetText(java.lang.String)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
org.libsdl.app.HIDDeviceUSB: java.lang.String getProductName()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
org.libsdl.app.HIDDeviceManager: void HIDDeviceRegisterCallback()
org.libsdl.app.SDLActivity: void onNativeClipboardChanged()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
org.libsdl.app.SDLActivity: void superOnBackPressed()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
org.libsdl.app.SDLActivity: void messageboxCreateAndShow(android.os.Bundle)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
org.libsdl.app.SDLSurface: void onSensorChanged(android.hardware.SensorEvent)
org.libsdl.app.DummyEdit: boolean onKeyPreIme(int,android.view.KeyEvent)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
org.libsdl.app.SDLActivity: int showToast(java.lang.String,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceUSB: boolean open()
org.libsdl.app.SDLJoystickHandler_API16$RangeComparator: SDLJoystickHandler_API16$RangeComparator()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
org.libsdl.app.SDLActivity: void minimizeWindow()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
org.love2d.android.GameActivity: void nativeSetDefaultStreamValues(int,int)
org.libsdl.app.HIDDeviceUSB: int getProductId()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
org.libsdl.app.SDLJoystickHandler_API16$RangeComparator: int compare(android.view.InputDevice$MotionRange,android.view.InputDevice$MotionRange)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation readCharacteristic(android.bluetooth.BluetoothGatt,java.util.UUID)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
org.libsdl.app.SDLActivity: boolean sendMessage(int,int)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.libsdl.app.HIDDeviceBLESteamController$2: void run()
org.libsdl.app.HIDDeviceUSB: int sendOutputReport(byte[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.libsdl.app.HIDDeviceManager: void HIDDeviceConnected(int,java.lang.String,int,int,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
org.love2d.android.GameActivity: boolean getImmersiveMode()
org.libsdl.app.HIDDeviceBLESteamController: void queueGattOperation(org.libsdl.app.HIDDeviceBLESteamController$GattOperation)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
org.libsdl.app.HIDDeviceManager: void close()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
org.libsdl.app.HIDDeviceBLESteamController$3: void run()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.libsdl.app.SDLActivity: org.libsdl.app.SDLGenericMotionListener_API12 getMotionListener()
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: HIDDeviceBLESteamController$GattOperation(android.bluetooth.BluetoothGatt,org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation,java.util.UUID,byte[])
org.libsdl.app.SDLControllerManager: SDLControllerManager()
org.libsdl.app.SDLClipboardHandler: java.lang.String clipboardGetText()
org.libsdl.app.SDLAudioManager: void audioWriteFloatBuffer(float[])
org.libsdl.app.HIDDeviceBLESteamController: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
org.libsdl.app.HIDDeviceBLESteamController: java.lang.String getIdentifier()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
org.libsdl.app.SDLActivity: void manualBackButton()
org.libsdl.app.HIDDeviceBLESteamController: void enableNotification(java.util.UUID)
org.libsdl.app.HIDDeviceUSB: java.lang.String getIdentifier()
org.libsdl.app.HIDDeviceBLESteamController: java.util.LinkedList access$000(org.libsdl.app.HIDDeviceBLESteamController)
org.libsdl.app.SDLActivity: java.lang.String[] getLibraries()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
org.libsdl.app.SDLActivity: void onLowMemory()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
org.libsdl.app.SDLGenericMotionListener_API12: void reclaimRelativeMouseModeIfNeeded()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
org.libsdl.app.HIDDevice: int sendFeatureReport(byte[])
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
org.libsdl.app.SDLActivity$3: SDLActivity$3(org.libsdl.app.SDLActivity,android.os.Bundle)
org.libsdl.app.HIDDeviceBLESteamController$2: HIDDeviceBLESteamController$2(org.libsdl.app.HIDDeviceBLESteamController)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
org.libsdl.app.HIDDeviceUSB: void shutdown()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
org.libsdl.app.SDLSurface: void surfaceDestroyed(android.view.SurfaceHolder)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
org.libsdl.app.SDLSurface: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
org.libsdl.app.SDLActivity: void initTouch()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
org.libsdl.app.SDLActivity: void onDestroy()
org.libsdl.app.HIDDevice: void setFrozen(boolean)
org.libsdl.app.SDLActivity: int openURL(java.lang.String)
org.libsdl.app.SDLJoystickHandler_API16: java.lang.String getJoystickDescriptor(android.view.InputDevice)
org.libsdl.app.SDLActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
org.libsdl.app.SDLGenericMotionListener_API24: SDLGenericMotionListener_API24()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
org.libsdl.app.HIDDevice: boolean getFeatureReport(byte[])
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
org.libsdl.app.SDLActivity: SDLActivity()
org.libsdl.app.HIDDeviceManager: void handleUsbDeviceAttached(android.hardware.usb.UsbDevice)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
org.libsdl.app.SDLActivity: void resumeNativeThread()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
org.libsdl.app.SDLActivity$ShowTextInputTask: SDLActivity$ShowTextInputTask(int,int,int,int)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
org.libsdl.app.SDLSurface: boolean onKey(android.view.View,int,android.view.KeyEvent)
org.libsdl.app.HIDDeviceManager: void HIDDeviceOpenResult(int,boolean)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
org.libsdl.app.SDLActivity: void handleNativeState()
org.love2d.android.GameActivity: boolean isNativeLibsExtracted()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
org.libsdl.app.SDLActivity$NativeState: org.libsdl.app.SDLActivity$NativeState valueOf(java.lang.String)
org.libsdl.app.SDLAudioManager: void captureClose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
org.libsdl.app.SDLJoystickHandler_API19: int getProductId(android.view.InputDevice)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
org.love2d.android.GameActivity: java.lang.String getCRequirePath()
org.libsdl.app.SDLActivity: void onWindowFocusChanged(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
org.libsdl.app.SDLGenericMotionListener_API26: boolean supportsRelativeMouse()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
org.libsdl.app.SDLSurface: void handlePause()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
org.libsdl.app.SDLHapticHandler_API26: SDLHapticHandler_API26()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.libsdl.app.SDLActivity: void nativePause()
org.libsdl.app.SDLAudioManager: void audioSetThreadPriority(boolean,int)
org.libsdl.app.SDLAudioManager: void audioWriteByteBuffer(byte[])
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
org.libsdl.app.HIDDeviceUSB: int getId()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
org.libsdl.app.SDLGenericMotionListener_API12: boolean setRelativeMouseEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
org.libsdl.app.HIDDevice: java.lang.String getProductName()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
org.love2d.android.GameActivity: boolean copyAssetFile(java.io.InputStream,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
org.libsdl.app.HIDDeviceManager: void handleUsbDeviceDetached(android.hardware.usb.UsbDevice)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.Toolbar: void setTitle(int)
org.libsdl.app.HIDDeviceBLESteamController: int sendFeatureReport(byte[])
org.libsdl.app.SDLHapticHandler: void run(int,float,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
org.libsdl.app.SDLAudioManager: void audioClose()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
org.libsdl.app.SDLActivity: android.view.Surface getNativeSurface()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.libsdl.app.HIDDeviceManager$1: HIDDeviceManager$1(org.libsdl.app.HIDDeviceManager)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
org.libsdl.app.HIDDeviceManager: void initializeBluetooth()
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: org.libsdl.app.HIDDeviceBLESteamController$GattOperation enableNotification(android.bluetooth.BluetoothGatt,java.util.UUID)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
org.libsdl.app.SDLGenericMotionListener_API12: SDLGenericMotionListener_API12()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.libsdl.app.SDLActivity: void nativeFocusChanged(boolean)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
org.libsdl.app.SDLActivity: void onNativeKeyDown(int)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
org.libsdl.app.HIDDeviceBLESteamController: android.bluetooth.BluetoothGatt getGatt()
org.libsdl.app.HIDDeviceBLESteamController: java.lang.String getSerialNumber()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.libsdl.app.SDLActivity: void pauseNativeThread()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
org.libsdl.app.DummyEdit: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.libsdl.app.SDLActivity$5: void onClick(android.view.View)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
org.libsdl.app.HIDDeviceManager: int sendOutputReport(int,byte[])
org.libsdl.app.SDLJoystickHandler_API19: int getVendorId(android.view.InputDevice)
org.libsdl.app.HIDDevice: int getProductId()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
org.libsdl.app.HIDDeviceUSB: int getVendorId()
org.libsdl.app.HIDDeviceManager: void access$200(org.libsdl.app.HIDDeviceManager,android.hardware.usb.UsbDevice,boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
org.libsdl.app.HIDDeviceBLESteamController: java.lang.String getManufacturerName()
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
org.libsdl.app.DummyEdit: boolean onCheckIsTextEditor()
org.libsdl.app.SDLActivity: void setOrientationBis(int,int,boolean,java.lang.String)
org.libsdl.app.SDLControllerManager: int nativeAddHaptic(int,java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
org.libsdl.app.HIDDeviceBLESteamController$GattOperation: HIDDeviceBLESteamController$GattOperation(android.bluetooth.BluetoothGatt,org.libsdl.app.HIDDeviceBLESteamController$GattOperation$Operation,java.util.UUID)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
org.libsdl.app.SDLActivity: boolean setSystemCursor(int)
org.libsdl.app.SDLControllerManager: int onNativePadUp(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.libsdl.app.SDLActivity: void onResume()
org.libsdl.app.SDLActivity: boolean isTextInputEvent(android.view.KeyEvent)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
org.love2d.android.GameActivity: boolean initializeSafeArea()
org.libsdl.app.HIDDeviceManager: int sendFeatureReport(int,byte[])
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
org.libsdl.app.SDLClipboardHandler: void onPrimaryClipChanged()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
org.libsdl.app.HIDDeviceManager: void HIDDeviceOpenPending(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
org.libsdl.app.HIDDeviceManager: HIDDeviceManager(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
org.libsdl.app.SDLActivity: boolean isChromebook()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
org.libsdl.app.HIDDeviceManager: void access$100(org.libsdl.app.HIDDeviceManager,android.hardware.usb.UsbDevice)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
org.libsdl.app.SDLAudioManager: int[] open(boolean,int,int,int,int)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
org.love2d.android.GameActivity: java.util.HashMap buildFileTree(android.content.res.AssetManager,java.lang.String,java.util.HashMap)
org.love2d.android.GameActivity: void handleIntent(android.content.Intent)
org.libsdl.app.SDLInputConnection: SDLInputConnection(android.view.View,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.libsdl.app.HIDDeviceManager: boolean isHIDDeviceInterface(android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface)
org.libsdl.app.SDLAudioManager: int captureReadShortBuffer(short[],boolean)
org.libsdl.app.SDLActivity: void clipboardSetText(java.lang.String)
org.libsdl.app.HIDDeviceManager: void HIDDeviceInputReport(int,byte[])
org.libsdl.app.HIDDeviceBLESteamController: boolean probeService(org.libsdl.app.HIDDeviceBLESteamController)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
org.libsdl.app.SDLActivity: java.lang.String[] getArguments()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
org.libsdl.app.SDLActivity$ShowTextInputTask: void run()
org.libsdl.app.SDLActivity: void onStart()
org.libsdl.app.SDLActivity: boolean isTablet()
org.libsdl.app.HIDDevice: void close()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
org.libsdl.app.SDLSurface: void surfaceCreated(android.view.SurfaceHolder)
